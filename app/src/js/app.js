angular.module("app",["app.core","app.services","app.pokemon","app.pages","ui.router","templates"]),angular.module("app.core",[]),angular.module("app.services",[]),angular.module("app.pokemon",[]),angular.module("app.pages",[]),angular.module("templates",[]),angular.module("app").config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/index/"),$stateProvider.state("index",{url:"/index/",template:"<index-page></index-page>"}).state("pokemon",{url:"/pokemon/",template:"<ui-view></ui-view>"}).state("pokemon.id",{url:":id/",template:'<pokemon-page pokemon-id="pokemonId"></pokemon-page>',controller:function($scope,$stateParams){$scope.pokemonId=$stateParams.id}})}),angular.module("app.services").service("PokemonEP",function(REST,PokemonMap,$q){return{getPokemon:function(id){return REST.mr("GET","http://pokeapi.co/api/v1/pokemon/"+id+"/")},getPokemonDescription:function(url){return REST.mr("GET","http://pokeapi.co/"+url)},getPokemonsList:function(lastId){for(var pokemonList=[],firstId=Number(lastId)+1,lastId=firstId+16,i=firstId;lastId>i;i++)pokemonList.push(this.getPokemon(i));return $q.all(pokemonList)}}}).service("PokemonMap",function(REST){return{mapPokemonCell:function(poke){return{id:poke.pkdx_id,num:this.mapPokemonNum(poke.pkdx_id),name:poke.name,types:poke.types,img:"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/"+this.mapPokemonNum(poke.pkdx_id)+".png"}},mapPokemonPage:function(poke){return{id:poke.pkdx_id,num:this.mapPokemonNum(poke.pkdx_id),name:poke.name,types:poke.types,img:"https://assets.pokemon.com/assets/cms2/img/pokedex/full/"+this.mapPokemonNum(poke.pkdx_id)+".png",descriptionUrl:poke.descriptions[poke.descriptions.length-1].resource_uri,params:{height:this.mapPokemonHeight(poke.height),weight:this.mapPokemonWidth(poke.weight),gender:poke.male_female_ratio,category:poke.species,abilities:this.mapPokemonAbilities(poke.abilities)},stats:{hp:poke.hp,attack:poke.attack,defense:poke.defense,specialAttack:poke.sp_atk,specialDefense:poke.sp_def,speed:poke.speed},moves:poke.moves}},mapPokemonNum:function(id){return+(100>id)?10>id?"00"+String(id):"0"+String(id):String(id)},mapPokemonHeight:function(num){return Number(num)/10+" m"},mapPokemonWidth:function(num){return Number(num/10)+" kg"},mapPokemonAbilities:function(abilities){var abilArr=[];return abilities.forEach(function(e){abilArr.push(e.name)}),abilArr.join(", ")}}}).service("REST",function($q,$http){return{mr:function(method,url,data,error){var d=data||null,q=$q.defer(),request=$http({method:method,url:url,data:d});return request.success(function(data,status){q.resolve(data,status)}).error(function(data,status){q.resolve(data,status)}),q.promise}}}),angular.module("app.pokemon").directive("pokemonCell",function($templateCache){return{restrict:"E",template:$templateCache.get("js/modules/pokemon-cell/pokemon-cell.html"),scope:{pokemon:"="},link:function(scope){}}}),angular.module("app.pages").directive("indexPage",function(PokemonEP,PokemonMap,$templateCache){return{restrict:"E",template:$templateCache.get("js/modules/pages/index-page/index-page.html"),link:function(scope){function getPokemonsList(lastId){scope.preloader=!0,PokemonEP.getPokemonsList(lastId).then(function(data){data.forEach(function(e){scope.pokemons.push(PokemonMap.mapPokemonCell(e)),scope.preloader=!1})})}function infiniteScroll(){window.onscroll=function(ev){window.innerHeight+window.scrollY>=document.body.offsetHeight&&getPokemonsList(scope.pokemons[scope.pokemons.length-1].id)}}scope.pokemons=[],scope.pokemonsT=[],scope.infScroll=!1,scope.preloader=!1,getPokemonsList(0),scope.loadMore=function(){getPokemonsList(scope.pokemons[scope.pokemons.length-1].id),infiniteScroll(),scope.infScroll=!0}}}}),angular.module("app.pokemon").directive("pokemonPage",function(PokemonEP,PokemonMap,$templateCache){return{restrict:"E",template:$templateCache.get("js/modules/pages/pokemon-page/pokemon-page.html"),scope:{pokemonId:"="},link:function(scope){scope.preloader=!0,PokemonEP.getPokemon(scope.pokemonId).then(function(data){scope.pokemon=PokemonMap.mapPokemonPage(data),PokemonEP.getPokemonDescription(scope.pokemon.descriptionUrl).then(function(data){scope.pokemon.description=data.description,scope.preloader=!1})});var prevPokeId=1==scope.pokemonId?720:Number(scope.pokemonId)-1,nextPokeId=720==scope.pokemonId?1:Number(scope.pokemonId)+1;PokemonEP.getPokemon(prevPokeId).then(function(data){data&&(scope.pokePrev=PokemonMap.mapPokemonPage(data))}),PokemonEP.getPokemon(nextPokeId).then(function(data){data&&(scope.pokeNext=PokemonMap.mapPokemonPage(data))})}}});